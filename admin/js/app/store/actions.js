define(["exports","app/store/types","/s3cms_project/config.js","lib/aws-sdk"],function(exports,_appStoreTypes,_s3cms_projectConfigJs,_libAwsSdk){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.beginLogin = beginLogin;exports.finalizeLogin = finalizeLogin;exports.cancelLogin = cancelLogin;exports.login = login;exports.logout = logout;exports.setPreference = setPreference;exports.deletePreference = deletePreference;function _interopRequireDefault(obj){return obj && obj.__esModule?obj:{"default":obj};}var _Config=_interopRequireDefault(_s3cms_projectConfigJs);var creds=new AWS.CognitoIdentityCredentials({IdentityPoolId:_Config["default"].aws.identityPoolId});AWS.config.update({region:_Config["default"].aws.cognitoRegion,credentials:creds});var bucket=new AWS.S3({params:{Bucket:_Config["default"].aws.bucket},region:_Config["default"].aws.region});function beginLogin(provider,info){return {type:_appStoreTypes.BEGINLOGIN,provider:provider,info:info};}function finalizeLogin(provider,id,name,email){return function(dispatch){dispatch(beginLogin(provider,"Confirming login with AWS"));creds.params.Logins = {};creds.params.Logins[provider] = id; // Explicity expire credentials so they are refreshed
// on the next request.
creds.expired = true;creds.refresh(function(err){if(err){dispatch(cancelLogin(provider,err.toString()));return;}dispatch(beginLogin(provider,"Checking permissions"));bucket.getObject({Key:"s3cms_project/permission_test.txt"},function(err,data){if(err.code === "AccessDenied"){dispatch(login(provider,creds.identityId,name,email,false));return;}if(err){dispatch(cancelLogin(provider,err.toString()));return;}dispatch(login(provider,creds.identityId,name,email,true));});});};}function cancelLogin(provider,reason){return {type:_appStoreTypes.CANCELLOGIN,provider:provider,reason:reason};}function login(provider,id,name,email,admin){return {type:_appStoreTypes.LOGIN,provider:provider,id:id,name:name,email:email,admin:admin};}function logout(){return {type:_appStoreTypes.LOGOUT};}function setPreference(key,value){return {type:_appStoreTypes.SETPREFERENCE,key:key,value:value};}function deletePreference(key,value){return {type:_appStoreTypes.DELETEPREFERENCE,key:key};}});
//# sourceMappingURL=actions.js.map
