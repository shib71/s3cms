define(["exports","module","redux","app/store/types"],function(exports,module,_redux,_appStoreTypes){"use strict";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key] = value;}return obj;}function profile(){var state=arguments.length <= 0 || arguments[0] === undefined?{}:arguments[0];var action=arguments.length <= 1 || arguments[1] === undefined?{}:arguments[1];switch(action.type){case _appStoreTypes.BEGINLOGIN:return {provider:action.provider,status:"processing",info:action.info};case _appStoreTypes.CANCELLOGIN:return {provider:action.provider,status:"cancelled",error:action.reason};case _appStoreTypes.LOGIN:return {provider:action.provider,id:action.id,name:action.name,email:action.email,admin:action.admin,status:"loggedin"};case _appStoreTypes.LOGOUT:return {};default:return state;}}function preferences(){var state=arguments.length <= 0 || arguments[0] === undefined?{}:arguments[0];var action=arguments.length <= 1 || arguments[1] === undefined?{}:arguments[1];switch(action.type){case _appStoreTypes.SETPREFERENCE:return Object.assign({},state,_defineProperty({},action.key,action.value));case _appStoreTypes.DELETEPREFERENCE:var newstate=Object.assign({},state);delete newstate[action.key];return newstate;default:return state;}}function config(){var state=arguments.length <= 0 || arguments[0] === undefined?{}:arguments[0];var action=arguments.length <= 1 || arguments[1] === undefined?{}:arguments[1];return state;}var cmsApp=(0,_redux.combineReducers)({profile:profile,preferences:preferences,config:config});module.exports = cmsApp;});
//# sourceMappingURL=reducers.js.map
